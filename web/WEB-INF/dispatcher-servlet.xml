<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.1.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">
    
    <context:component-scan base-package="com.silvassa" />
    <context:property-placeholder location="classpath:com/silvassa/resource/ApplicationResources.properties" />
    <mvc:annotation-driven />
    <mvc:resources mapping="/res/**" location="/res/" />
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**/*"/>
            <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
<!--                <property name="cacheSeconds" value="0"/>
                <property name="useExpiresHeader" value="true"/>
                <property name="useCacheControlHeader" value="true"/>
                <property name="useCacheControlNoStore" value="true"/>-->
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <mvc:interceptors>
        <bean class="com.silvassa.interceptor.SessionValidator" />
    </mvc:interceptors>    

    <bean name="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${pg-jdbc.driverClassName}" />
        <property name="url" value="${pg-jdbc.url}" />
        <property name="username" value="${pg-jdbc.username}" />
        <property name="password" value="${pg-jdbc.password}" />
    </bean>
    <bean name="dataSourceMail" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${mail.jdbc.driverClassName}" />
        <property name="url" value="${mail.jdbc.url}" />
        <property name="username" value="${mail.jdbc.username}" />
        <property name="password" value="${mail.jdbc.password}" />
    </bean>
    <bean name="sessionHBMail" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
        <property name="dataSource" ref="dataSourceMail" />
        <property name="annotatedClasses">
            <list>
                </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                  <prop key="hibernate.show_sql">false</prop> 
                  <prop key="connection_pool_size">50</prop>
                  <prop key="hbm2ddl.auto">create</prop> 
            </props>
        </property>
        </bean>
    <bean name="sessionHB" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
            <list>
                <value>com.silvassa.model.LoginUserBean</value>
                <value>com.silvassa.model.StateBean</value>
                <value>com.silvassa.model.Zonemaster</value>
                <value>com.silvassa.model.PropertyDetails</value>
                <!--<value>com.silvassa.model.Generatedtax</value>-->
                <value>com.silvassa.model.TaxGeneratedLog</value>
                
                <value>com.silvassa.model.TaxCollectionBean</value>
                <value>com.silvassa.model.PropertyForTaxBean</value>
                <value>com.silvassa.model.PropertyRentable</value>
                <value>com.silvassa.model.PropertyFloor</value>

                <value>com.silvassa.model.TaxNotices</value>
                <value>com.silvassa.model.FloorWiseTAXDetails</value>
                <value>com.silvassa.model.NoticeViewBean</value>
                <value>com.silvassa.model.PaymentBean</value>
                <value>com.silvassa.model.TAXDetailBean</value>
                <value>com.silvassa.model.Usermaster</value>
                <value>com.silvassa.model.UserPermission</value>
          
                <value>com.silvassa.model.ActionTracker</value>
                <value>com.silvassa.model.PropertyEditableFields</value>
                <value>com.silvassa.model.ObjectionBean</value>
                <value>com.silvassa.model.ObjectionTx</value>
                <value>com.silvassa.model.ObjDocument</value>
                <value>com.silvassa.model.PaymentModeMaster</value>
                <value>com.silvassa.model.BankMaster</value>
                
                <value>com.silvassa.model.Wardmaster</value>
                <value>com.silvassa.model.SubLocality</value>
                <value>com.silvassa.model.PaymentStatus</value>
                
                <!--New Class Added By Jay-->
                <value>com.silvassa.model.ObjRelations</value>
                <value>com.silvassa.model.SlJobAllocation</value>
                <value>com.silvassa.model.SLJobAllocationDeatils</value>
                <!--New Class Added By Jay End-->
                <value>com.silvassa.model.ObjectionActionHistory</value>
                <value>com.silvassa.model.ObjectionActionTray</value>                
                <value>com.silvassa.model.CorrectionFormBean</value>                
                <value>com.silvassa.model.CorrectionFormFloorBean</value>                
                <value>com.silvassa.model.CorrectionFormImageBean</value>
                <value>com.silvassa.model.CorrectionFormHitLogger</value>    
                <value>com.silvassa.model.PropertyTransferWithInstrument</value> 
                <value>com.silvassa.model.PropertyTransferWithOutInstrument</value>
                <value>com.silvassa.model.PropertyTransferCollectionBean</value>             
                <value>com.silvassa.model.TAXDetailBeanOldTax</value>     
                <value>com.silvassa.model.CorrectionActionHistory</value>   
<!--                <value>com.silvassa.model.QrcodePaymentBean</value>     -->

            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop> 
                  <prop key="connection_pool_size">50</prop>
                  <prop key="hbm2ddl.auto">create</prop>
            </props>
        </property>
    </bean>
        
<!--    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
        <property name="prefix" value="/WEB-INF/jsp/" /> 
        <property name="suffix" value=".jsp" /> 
    </bean>-->
    
    <bean id="tilesConfigurer"   class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">  
        <property name="definitions">  
            <list>  
                <value>/WEB-INF/tiles.xml</value>  
            </list>  
        </property>  
    </bean>  
    <bean id="tilesviewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />
    
    <bean class="org.springframework.web.servlet.view.XmlViewResolver">
        <property name="order" value="1" />
        <property name="location" value="/WEB-INF/excel-view.xml" />
    </bean>
    <bean id="viewResolver1" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
  		<property name="order" value="2"/>
  		<property name="basename" value="views"/>
	</bean>
     <bean id="multipartResolver"

        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1048576"/>
    </bean> 
    <bean class="org.springframework.web.servlet.view.XmlViewResolver">
	   <property name="location">
	       <value>/WEB-INF/spring-excel-views.xml</value>
	   </property>
	   <property name="order" value="0" />
	</bean>  
    
<!--    <task:scheduled-tasks>
        <task:scheduled ref="scheduledTask" method="updateTaxPenalty" cron="1 0 0 * * *" />
    </task:scheduled-tasks>-->
   
    
    
    <!-- 
        #####################################################
        Bind a URL to a view without making controller class.    
        #####################################################
        
        <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
            <property name="mappings">
                <props>
                    <prop key="index">indexController</prop>
                </props>
            </property>
        </bean>
        <bean name="indexController" class="org.springframework.web.servlet.mvc.ParameterizableViewController" p:viewName="index" />
    -->
    
<!--    <util:constant
        static-field="org.springframework.session.data.redis.config.ConfigureRedisAction.NO_OP" />
    <bean   class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration" />
    <util:list id="listofnodes">
        <value type="java.lang.String">redis-project-clust-0001-001.vr0nyh.0001.aps1.cache.amazonaws.com:6379</value>
        <value type="java.lang.String">redis-project-clust-0001-002.vr0nyh.0001.aps1.cache.amazonaws.com:6379</value>
    </util:list>
    <bean id="configuration"
              class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <constructor-arg ref="listofnodes" type="java.util.Collection"></constructor-arg>
    </bean>

    <bean
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg ref="configuration"></constructor-arg>
    </bean>-->

</beans>



